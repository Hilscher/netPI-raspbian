#!/bin/bash

set -eu

echo "🔵post_push"

echo "✅Manifesting"
  echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"

export DOCKER_CLI_EXPERIMENTAL=enabled

manifests=""

for FILE in ${DOCKERFILE_PATH%.*}.*
do
    TARGET_ARCH=$(echo "${FILE}" | cut -d '.' -f 2)

    echo $TARGET_ARCH

    manifests="${manifests} ${IMAGE_NAME}-${TARGET_ARCH}"
done

docker manifest create ${IMAGE_NAME} $manifests

for FILE in ${DOCKERFILE_PATH%.*}.*
do
    TARGET_ARCH=$(echo "${FILE}" | cut -d '.' -f 2)

    case "$TARGET_ARCH" in
        *arm32v5)
            ARCH="arm"
            ARCH_VARIANT="v5"
            ;;
        *arm32v6)
            ARCH="arm"
            ARCH_VARIANT="v6"
            ;;
        *arm32v7)
            ARCH=arm
            ARCH_VARIANT="v7"
            ;;
        *arm64v8)
            ARCH=arm64
            ARCH_VARIANT="v8"
            ;;
        *)
           echo "Unknown target architecture ${TARGET_ARCH}"
           exit 0   
           ;;
    esac

    docker manifest annotate ${IMAGE_NAME} ${IMAGE_NAME}-${TARGET_ARCH} --os linux --arch ${ARCH} --variant ${ARCH_VARIANT}

done

docker manifest inspect --verbose ${IMAGE_NAME}

docker manifest push --purge "${IMAGE_NAME}"
